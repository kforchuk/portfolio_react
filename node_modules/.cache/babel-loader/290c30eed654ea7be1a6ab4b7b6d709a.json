{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _usePrefix = require(\"../../internal/usePrefix\");\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * SideNavFooter is used for rendering the button at the bottom of the side\n * navigation that is a part of the UI Shell. It is responsible for handling the\n * user interaction to expand or collapse the side navigation.\n */\n\n\nvar SideNavFooter = function SideNavFooter(_ref) {\n  var assistiveText = _ref.assistiveText,\n      customClassName = _ref.className,\n      expanded = _ref.expanded,\n      onToggle = _ref.onToggle;\n  var prefix = (0, _usePrefix.usePrefix)();\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--side-nav__footer\"), customClassName);\n  return /*#__PURE__*/_react.default.createElement(\"footer\", {\n    className: className\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"\".concat(prefix, \"--side-nav__toggle\"),\n    type: \"button\",\n    onClick: function onClick(evt) {\n      return onToggle(evt);\n    },\n    title: assistiveText\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__icon\")\n  }, expanded ? /*#__PURE__*/_react.default.createElement(_iconsReact.Close20, null) : /*#__PURE__*/_react.default.createElement(_iconsReact.ChevronRight20, null)), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, assistiveText)));\n};\n\nSideNavFooter.propTypes = {\n  /**\n   * Provide text to be read to screen readers and shown as a tooltip when\n   * interacting with the toggle button in the footer\n   */\n  assistiveText: _propTypes.default.string.isRequired,\n  className: _propTypes.default.string,\n\n  /**\n   * Specify whether the side navigation is expanded or collapsed\n   */\n  expanded: _propTypes.default.bool.isRequired,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: _propTypes.default.bool,\n\n  /**\n   * Provide a function that is called when the toggle button is interacted\n   * with. Useful for controlling the expansion state of the side navigation.\n   */\n  onToggle: _propTypes.default.func.isRequired\n};\nSideNavFooter.defaultProps = {\n  assistiveText: 'Toggle opening or closing the side navigation'\n};\nvar _default = SideNavFooter;\nexports.default = _default;","map":{"version":3,"sources":["/Users/Katrina/portfolio/portfolio_react/node_modules/carbon-components-react/lib/components/UIShell/SideNavFooter.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_iconsReact","_classnames","_react","_propTypes","_usePrefix","SideNavFooter","_ref","assistiveText","customClassName","className","expanded","onToggle","prefix","usePrefix","concat","createElement","type","onClick","evt","title","Close20","ChevronRight20","propTypes","string","isRequired","bool","isSideNavExpanded","func","defaultProps","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _usePrefix = require(\"../../internal/usePrefix\");\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * SideNavFooter is used for rendering the button at the bottom of the side\n * navigation that is a part of the UI Shell. It is responsible for handling the\n * user interaction to expand or collapse the side navigation.\n */\nvar SideNavFooter = function SideNavFooter(_ref) {\n  var assistiveText = _ref.assistiveText,\n      customClassName = _ref.className,\n      expanded = _ref.expanded,\n      onToggle = _ref.onToggle;\n  var prefix = (0, _usePrefix.usePrefix)();\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--side-nav__footer\"), customClassName);\n  return /*#__PURE__*/_react.default.createElement(\"footer\", {\n    className: className\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"\".concat(prefix, \"--side-nav__toggle\"),\n    type: \"button\",\n    onClick: function onClick(evt) {\n      return onToggle(evt);\n    },\n    title: assistiveText\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__icon\")\n  }, expanded ? /*#__PURE__*/_react.default.createElement(_iconsReact.Close20, null) : /*#__PURE__*/_react.default.createElement(_iconsReact.ChevronRight20, null)), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, assistiveText)));\n};\n\nSideNavFooter.propTypes = {\n  /**\n   * Provide text to be read to screen readers and shown as a tooltip when\n   * interacting with the toggle button in the footer\n   */\n  assistiveText: _propTypes.default.string.isRequired,\n  className: _propTypes.default.string,\n\n  /**\n   * Specify whether the side navigation is expanded or collapsed\n   */\n  expanded: _propTypes.default.bool.isRequired,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: _propTypes.default.bool,\n\n  /**\n   * Provide a function that is called when the toggle button is interacted\n   * with. Useful for controlling the expansion state of the side navigation.\n   */\n  onToggle: _propTypes.default.func.isRequired\n};\nSideNavFooter.defaultProps = {\n  assistiveText: 'Toggle opening or closing the side navigation'\n};\nvar _default = SideNavFooter;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}